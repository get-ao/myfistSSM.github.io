<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
 	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
 	 
		<!-- 1.启用spring的注解扫描器 -->	 
 	 	<context:component-scan base-package="edu.jmi.dgsx"/>
 	 	
 	 	<!-- 2.配置数据源 -->
 	 	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 	 	    <property name="locations">
      		<value>classpath:db.properties</value>
      	</property>
 	 	</bean>
 	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
 	     <property name="driverClass" value="${dataSource.driver}"/>
		<property name="jdbcUrl" value="${dataSource.url}"/>
		<property name="user" value="${dataSource.username}"/>
		<property name="password" value="${dataSource.password}"/>
 	 </bean>
 	 
 	 <!--3 创建sqlsessionfactory -->
 	 <bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      	<property name="dataSource" ref="dataSource"></property>
      	<!-- 扫描 po 包，使用别名 -->
		<property name="typeAliasesPackage" value="edu.jmi.dgsx.po"/>
      	<!-- 设置自动将指定包下所有的xxxMapper.xml文件引入mybatis -->
      	<property name="mapperLocations" value="classpath:edu/jmi/dgsx/mapper/*.xml"/>
 	 </bean>
 	 
 	 <!-- 4.创建DAO -->
 	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注意使用 sqlSessionFactoryBeanName 避免出现spring 扫描组件失效问题 -->
		<property name="sqlSessionFactoryBeanName" value="sqlsessionfactory" />
		<property name="basePackage" value="edu.jmi.dgsx.dao" />
 	 </bean>
 
      <!--5. 事务管理器 （JDBC） -->
      <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="dataSource"></property>
 	 </bean>
 	 
 	 <!-- 6.启动声明式事务驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	 
	
</beans>